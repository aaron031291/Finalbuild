// Recover chain from backup
async function recoverChain() {
  try {
    // Load backup
    const fs = require('fs');
    const backupPath = './backups/blockchain-latest.json';
    
    if (fs.existsSync(backupPath)) {
      const backupData = fs.readFileSync(backupPath, 'utf8');
      const backupChain = JSON.parse(backupData);
      
      // Validate backup chain
      if (blockchain.validator.validateChain(backupChain)) {
        // Stop mining
        blockchain.stopMining();
        
        // Replace chain
        blockchain.chain = backupChain;
        
        // Save to storage
        await blockchain.storage.saveChain(blockchain.chain);
        
        // Restart mining
        blockchain.startMining();
        
        console.log('Chain recovered from backup');
      } else {
        console.error('Invalid backup chain');
      }
    } else {
      console.error('Backup file not found');
    }
  } catch (error) {
    console.error(`Recovery error: ${error.message}`);
  }
}

// Run recovery
recoverChain().catch(console.error);