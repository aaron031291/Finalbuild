// Example with MongoDB
const { MongoClient } = require('mongodb');

// Create custom storage implementation
class MongoBlockchainStorage {
  constructor(config) {
    this.config = config;
    this.client = null;
    this.db = null;
  }

  async initialize() {
    this.client = new MongoClient(this.config.mongoUri);
    await this.client.connect();
    this.db = this.client.db(this.config.dbName);
    return true;
  }

  async saveChain(chain) {
    await this.db.collection('blockchain').updateOne(
      { id: 'main-chain' },
      { $set: { chain } },
      { upsert: true }
    );
    return true;
  }

  async loadChain() {
    const result = await this.db.collection('blockchain').findOne({ id: 'main-chain' });
    return result ? result.chain : null;
  }
}

// Use custom storage in blockchain
const blockchain = new BlockchainCore(system, {
  // Other config options
  storage: new MongoBlockchainStorage({
    mongoUri: 'mongodb://localhost:27017',
    dbName: 'blockchain',
  }),
});