const express = require('express');
const app = express();
app.use(express.json());

// Initialize blockchain (as shown in Direct Integration)

// API endpoints
app.post('/api/transactions', async (req, res) => {
  try {
    const transaction = await blockchain.submitTransaction(req.body);
    res.status(201).json(transaction);
  } catch (error) {
    res.status(400).json({ error: error.message });
  }
});

app.get('/api/transactions/:id', (req, res) => {
  const status = blockchain.getTransactionStatus(req.params.id);
  if (status.status === 'unknown') {
    res.status(404).json({ error: 'Transaction not found' });
  } else {
    res.json(status);
  }
});

app.get('/api/blockchain/status', (req, res) => {
  const status = blockchain.getBlockchainStatus();
  res.json(status);
});

// Start server
app.listen(3000, () => {
  console.log('Blockchain API server running on port 3000');
});